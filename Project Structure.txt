FRONT

#Pokretanje aplikacije
Uneti mejl korisnika koji se loguje
Kupimo njegove podatke sa odgovarajuće putanje u fajl sistemu (ili iz baze)

#Glavna strana
4 button-a (Prikaži privatni i javni prsten, generiši par ključeva, pošalji poruku, pročitaj poruku)

#Slanje poruke
Unosimo mejl osobe kojoj šaljemo (idB), tekst poruke i deo za kriptovanje
Poruku smeštamo u folder primeljnih poruka primaoca

#Prijem poruke
Biramo fajl u našem folderu primljenih poruka i dekriptujemo željenu poruku

#Prikaz javnih i privatnih prstenova
Tablerani prikaz kao sa slajdova koji se učitava iz fajla i ažurira kada se generiše novi ključ 

----------------------
STRUKTURE

Prsten javnih (ID, TimeStamp, KeyID, Public key, UserID) 
Privatnih ključeva (ID, heširana Passphrase lozinka, TimeStamp, KeyID, Public key, Encrypted Private key, UserID)
Struktura poruke (TODO)

----------------------
FLOW APLIKACIJE

Kada se logujemo unosimo imejl korisnika koji predstavlja njegov UserID. Nakon logovanja mi iz keyPairs/UserID/private učitavamo sve naše redove iz private foldera u python listu privateRows. Isto tako iz keyPairs/UserId/public učitavamo sve redove iz public foldera u python listu publicRows. Kada generišemo RSA par ključeva mi to dodajemo u python listu privateRows, pri čemu polje ID tom redu postavljamo na vrednost brojač+1 gde vrednost brojača dobijamo čitanjem iz gajla keyPairs/counter.txt i zatim inkrementiramo brojač u fajlu. Takođe novokreirani red u privatnom prstenu sačuvamo u fajl sistemu na putanji keyPairs/UserID/private/ID.txt. 

Kada želimo da izvezemo odgovarajući red iz private-a mi kreiramo .pem fajl koji zapravo konvertuje ID javnog ključa kao i RSA par ključeva u .pem format i to smeštamo na lokaciji keyPairs/UserID/exported/ID.pem 

Kada želimo da uvezemo odgovarajući red u javni prsten, biramo odgovarajući fajl na lokaciji keyPairs/UserID/exported/ID.pem. Kada izaberemo odgovarajući fajl treba da iz .pem formata pretvorimo u .txt format pročitamo odatle isključivo ID javnog ključa i javni ključ (ne i šifrovani privatni). UserId dobijamo na osnovu putanje do fajla kao i globalni ID samog reda. I na kraju kada sve to konvertujemo i dodamo u python listu publicRows, takođe moramo da napravimo .txt fajl na lokaciji keyPairs/UserID/public/ID.txt

Kada brišemo odgovarajući red iz privatnog prstena, mi treba da ga izbacimo iz python liste privateRows, takođe treba izbrisati fajl na putanji keyPairs/UserID/private/ID.txt, i na osnovu globalnog ID-a tog reda koji ćemo izvući pre brisanja ćemo iterirati public folderu svih korisnika i tražiti da li u sebi imaju ID.txt fajl i ako ga imaju, izbrisaćemo ga.


